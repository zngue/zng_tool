syntax = "proto3";

package api.test.v1;
option go_package = "github.com/zngue/zng_tool/api/test/v1;v1";
import "google/api/annotations.proto";
import "validate/validate.proto";

service Test {//测试服务
  rpc Info (GetTestRequest) returns (GetTestReply) {
    option (google.api.http) = {
      get: "/v1/test/info"
    };
  }
  rpc List (GetListTestRequest) returns (GetTestReply) {
    option (google.api.http) = {
      get: "/v1/test/list"
    };
  }
  // 创建
  rpc Create (GetTestRequest) returns (GetTestReply) {
    option (google.api.http) = {
      post: "/v1/test/create"
      body: "*"
    };
  }
  //用户列表
  rpc ListUser (GetListTestRequest) returns (UserList) {
    option (google.api.http) = {
      get: "/v1/test/list_user"
    };
  }
  rpc ListUser2 (GetList2TestRequest) returns (UserList2Rely) {
    option (google.api.http) = {
      get: "/v1/test/list_user2"
    };
  }
}
message GetList2TestRequest{
  string name = 1;
  int32 status = 2 [(validate.rules).int32 = {in:[0, 1, 2, 3, 4]}];
  int32 age = 3;
  int32 page = 4;
  int32 pageSize = 5;
  int32 order = 6;
}
message UserList2Rely {
  repeated User user = 1;
  int32 total = 2;
  int32 page = 3;
  int32 pageSize = 4;
  int32 order = 5;
  int32 totalPage = 6;
  int32 status = 7;
  int32 age = 8;
}

message GetListTestRequest{
  string name = 1;
}
message GetTestRequest {
  string name = 1[(validate.rules).string.min_len = 1];
  int32 status = 2 [(validate.rules).int32 = {in:[0, 1, 2, 3, 4]}];
}
message GetTestReply {
  string message = 1;
}
message User {
  string name = 1;
  int32 age = 2;
  UserExit userExit = 3;
  UserType userType = 4;
  Data data = 5;
  message Data{
    string name = 1;
  }

}
message UserExit {
  string image = 1;
  int32 height = 2;
  int32 weight = 3;
}
message UserList {
  repeated User user = 1;
  int32 total = 2;
}
enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  USER_TYPE_ADMIN = 1;
  USER_TYPE_USER = 2;
}