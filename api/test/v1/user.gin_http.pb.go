// Code generated by protoc-gen-gin-http. DO NOT EDIT.
package v1

import (
	"github.com/gin-gonic/gin"
	"github.com/zngue/zng_app/pkg/bind"
	"github.com/zngue/zng_app/pkg/router"
	"github.com/zngue/zng_app/pkg/validate"
)

// 服务操作
const OperationGinUserInfo = "api.test.v1.User.Info"

// 服务url
const OperationGinUrlUserInfo = "/v1/gin-pb/info"

// 服务接口
type UserGinHttpService interface {
	Info(ctx *gin.Context, req *AbcUserRequest) (rs *AbcUserReply, err error)
}
type UserGinHttpRouterService struct {
	srv    UserGinHttpService
	router *gin.RouterGroup
}

// 服务注册
func (s *UserGinHttpRouterService) Register() []router.IRouter {
	return router.ApiServiceFn(
		router.ApiGetFn(s.router, OperationGinUrlUserInfo, s.Info),
	)
}

func (s *UserGinHttpRouterService) Info(ctx *gin.Context) (rs any, err error) {
	var in AbcUserRequest
	err = bind.Bind(ctx, &in)
	if err != nil {
		return
	}
	err = validate.Validate(&in)
	if err != nil {
		return
	}
	ctx.Set("operation", OperationGinUserInfo)
	rs, err = s.srv.Info(ctx, &in)
	return
}
func NewUserGinHttpRouterService(router *gin.RouterGroup, srv UserGinHttpService) *UserGinHttpRouterService {
	return &UserGinHttpRouterService{
		srv:    srv,
		router: router,
	}
}
